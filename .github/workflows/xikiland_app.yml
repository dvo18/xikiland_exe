name: Build and Release Python Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Create Executable using PyInstaller
      run: |
        pyinstaller --onefile --windowed --name client_XIKILAND2 --icon icons/xikiland_icon.ico main.py

    - name: Create Git tag
      id: create_tag
      run: |
        # Read the version prefix from version.txt
        VERSION_FILE="version.txt"
        if [ -f "$VERSION_FILE" ]; then
          VERSION_PREFIX=$(cat $VERSION_FILE | sed 's/\.$//')  # Remove trailing dot if present
        else
          echo "Version file not found!"
          exit 1
        fi
        
        # Fetch all tags
        git fetch --tags

        # Find the highest existing tag that matches the prefix
        LAST_TAG=$(git tag -l "${VERSION_PREFIX}*" | sort -V | tail -n 1)

        # Extract the version number and increment it
        if [ -z "$LAST_TAG" ]; then
          # If no existing tag is found, start with 0
          NEW_TAG="${VERSION_PREFIX}.0"
        else
          # Extract the last version number and increment it
          LAST_VERSION=$(echo "$LAST_TAG" | sed "s/${VERSION_PREFIX}.\(.*\)/\1/")
          NEW_VERSION=$(echo "$LAST_VERSION + 1" | bc)
          NEW_TAG="${VERSION_PREFIX}.${NEW_VERSION}"
        fi
        
        # Create and push the new tag
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git tag $NEW_TAG
        git push origin $NEW_TAG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload executable to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: dist/client_XIKILAND2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
