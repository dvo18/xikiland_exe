name: Build and Release Python Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Create Executable using PyInstaller
      run: |
        pyinstaller --onefile --windowed --name client_XIKILAND2 --icon icons/xikiland_icon.ico main.py

    # Crear el tag
    - name: Create Git tag
      id: create_tag
      run: |
        VERSION_FILE="version.txt"
        VERSION_PREFIX=$(cat $VERSION_FILE)
        LATEST_TAG=$(git tag --list "${VERSION_PREFIX}*" --sort=-v:refname | head -n 1)
        
        if [ -z "$LATEST_TAG" ]; then
          NEW_TAG="${VERSION_PREFIX}0"
        else
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F. -v OFS=. '{$NF++; print}')
        fi
        
        echo "New tag: $NEW_TAG"
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git tag $NEW_TAG
        git push origin $NEW_TAG
        echo "::set-output name=tag::$NEW_TAG"
    
    # Subir a GitHub Release
    - name: Upload executable to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/client_XIKILAND2
        tag_name: ${{ steps.create_tag.outputs.tag }}  # Usamos el tag generado
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

