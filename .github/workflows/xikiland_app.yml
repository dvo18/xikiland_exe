name: Build and Release Python Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Create Executable using PyInstaller
      run: |
        pyinstaller --onefile --windowed --name XIKILAND --icon icons/xikiland_icon.ico main.py

    # Crear el tag
    - name: Create Git tag
      id: create_tag
      run: |
        VERSION_FILE="version.txt"
        VERSION_PREFIX=$(cat $VERSION_FILE)  # Obtener el prefijo de la versión desde version.txt
        echo "Version prefix from version.txt: $VERSION_PREFIX"
        
        # Buscar las etiquetas existentes con el mismo prefijo
        LATEST_TAG=$(git tag --list "${VERSION_PREFIX}*" --sort=-v:refname | head -n 1)
        echo "LIST: $(git tag --list "${VERSION_PREFIX}*" --sort=-v:refname)"
        echo "Latest tag found with prefix $VERSION_PREFIX: $LATEST_TAG"
        
        if [ -z "$LATEST_TAG" ]; then
          # Si no existe ninguna etiqueta con el prefijo, crear una nueva etiqueta 0
          NEW_TAG="${VERSION_PREFIX}0"
          echo "No tag found. Creating new tag: $NEW_TAG"
        else
          # Obtener el número de la etiqueta más alta, sumar 1 y crear una nueva
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F. -v OFS=. '{$NF++; print}')
          echo "Tag found. Incrementing to new tag: $NEW_TAG"
        fi

        echo "New tag to be pushed: $NEW_TAG"
        
        # Configurar el usuario de git para hacer el push
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        
        # Intentar crear el nuevo tag
        git tag $NEW_TAG
        
        # Hacer push del nuevo tag
        git push origin $NEW_TAG
        
        # Guardar la nueva etiqueta en el archivo de entorno
        echo "tag=$NEW_TAG" >> $GITHUB_ENV
    
    # Subir a GitHub Release
    - name: Upload executable to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/client_XIKILAND2
        tag_name: ${{ env.tag }}  # Usamos el tag generado desde el archivo de entorno
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
